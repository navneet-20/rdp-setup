name: Free RDP (RustDesk Auto Latest Windows)

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: windows-latest
    timeout-minutes: 360

    steps:
    - name: Set up job
      run: echo "🚀 Starting RustDesk setup..."

    - name: Download Latest RustDesk Release (Windows)
      shell: pwsh
      run: |
        # Fetch latest release info
        $latest = Invoke-RestMethod -Uri "https://api.github.com/repos/rustdesk/rustdesk/releases/latest"
        Write-Host "📦 Latest version: $($latest.tag_name)"
        Write-Host "🔍 Available assets:"
        $latest.assets | ForEach-Object { Write-Host " - $($_.name)" }

        # Match correct Windows release (exe or msi)
        $asset = $latest.assets | Where-Object {
            $_.name -match "x86_64.*\.exe$" -or $_.name -match "x86.*\.exe$" -or $_.name -match "\.msi$"
        } | Select-Object -First 1

        if (-not $asset) {
            Write-Host "❌ No Windows asset found. Dumping list for debug:"
            $latest.assets | ForEach-Object { Write-Host $_.name }
            exit 1
        }

        Write-Host "⬇️ Downloading: $($asset.name)"
        Invoke-WebRequest -Uri $asset.browser_download_url -OutFile $asset.name

        # Get EXE file path
        $exe = Get-Item $asset.name
        if (-not $exe) {
            Write-Host "❌ rustdesk.exe not found!"
            exit 1
        }

        Write-Host "🟢 RustDesk executable path: $($exe.FullName)"
        $exe.FullName | Out-File -FilePath "rustdesk_path.txt" -Encoding utf8

    - name: Run RustDesk
      shell: pwsh
      run: |
        $exePath = Get-Content -Path "rustdesk_path.txt" -Raw
        Write-Host "🚀 Launching RustDesk from: $exePath"
        Start-Process -FilePath $exePath
        Write-Host "🕓 Keeping session alive for 6 hours..."
        Start-Sleep -Seconds 21600

    - name: Complete job
      run: echo "✅ RustDesk job completed successfully."
